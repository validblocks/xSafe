make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0

# Make data base, printed on Mon Jul  4 14:24:52 2022

# Variables

# environment
PHPLS_ALLOW_XDEBUG = 1
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
VSCODE_LOG_NATIVE = false
# makefile (from `.env', line 20)
TRAEFIK_DOMAIN = ${DOCKER_DOMAIN}
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# environment
ZNT_REPO_DIR = /Users/Rares/.oh-my-zsh/plugins/zsh-navigation-tools
# makefile
CURDIR := /Users/Rares/Sites/Graffino/Multisig/Multisig
# makefile
SHELL = /bin/sh
# makefile (from `.env', line 13)
NPMRC = //registry.npmjs.org/:_authToken=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
# environment
VSCODE_NLS_CONFIG = {"locale":"en-us","availableLanguages":{},"_languagePackSupport":true}
# makefile (from `.env', line 26)
TRAEFIK_RESOLVER = graffino-route53
# environment
_ = /usr/bin/make
# makefile (from `.env', line 21)
TRAEFIK_HOSTNAME = ${DOCKER_HOSTNAME}
# makefile (from `.env', line 1)
MAKEFILE_LIST :=  Makefile .env
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
LOCALE = en_US.UTF-8
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
INFOPATH = /opt/homebrew/share/info:
# environment
VSCODE_IPC_HOOK_EXTHOST = /var/folders/n8/cttdcj690n1f4b1nznxc8jj40000gn/T/vscode-ipc-688604f9-a8e7-441a-8427-e0bae04a45a1.sock
# environment
VSCODE_CWD = /
# environment
PATH = /Users/Rares/elrondsdk:node_modules/.bin:/Users/Rares/.n/bin:/opt/homebrew/opt/php@8.0/sbin:/opt/homebrew/opt/php@8.0/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:/usr/local/MacGPG2/bin:/usr/local/munki:/Library/Apple/usr/bin:/Users/Rares/.composer/vendor/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/opt/homebrew/include:/usr/bin:/bin:/usr/sbin:/sbin:/Users/Rares/.composer/vendor/bin:/Applications/Visual Studio Code.app/Contents/Resources/app/bin
# makefile (from `.env', line 23)
TRAEFIK_PASSWORD = $$2y$$05$$vfax9V5Q9M.86ro6t7EATOd/VMn5TS7BZ2e1O8FcwIoacBaZcS6Km
# environment
LSCOLORS = Gxfxcxdxbxegedabagacad
# makefile (from `Makefile', line 4)
CONTAINER_NGINX = docker compose exec -T nginx sh -c
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# environment
HOMEBREW_GITHUB_API_TOKEN = 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
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.zeWBeYJILt/Listeners
# automatic
%F = $(notdir $%)
# makefile (from `.env', line 9)
EXTRAS_API_DEVNET = 
# makefile (from `.env', line 3)
DOCKER_BUILDKIT = 1
# makefile (from `.env', line 22)
TRAEFIK_USER = multisig
# environment
VSCODE_PIPE_LOGGING = true
# environment
PWD = /Users/Rares/Sites/Graffino/Multisig/Multisig
# environment
HOMEBREW_CELLAR = /opt/homebrew/Cellar
# makefile (from `.env', line 6)
DOCKER_DOMAIN = *.graffino.live
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
MANPATH = /opt/homebrew/share/man::
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /Users/Rares
# default
MAKEFILEPATH = $(shell /usr/bin/xcode-select -print-path 2>/dev/null || echo /Developer)/Makefiles
# environment
VSCODE_CODE_CACHE_PATH = /Users/Rares/Library/Application Support/Code/CachedData/30d9c6cd9483b2cc586687151bcbcd635f373630
# environment
LOGNAME = Rares
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from `.env', line 5)
DOCKER_HOSTNAME = multisig.graffino.live
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 1
# makefile (from `Makefile', line 5)
CONTAINER_DEV = docker compose exec -T multisig_dev sh -c
# default
MAKE_VERSION := 3.81
# environment
USER = Rares
# makefile
.DEFAULT_GOAL := start
# environment
N_PREFIX = /Users/Rares/.n
# makefile (from `.env', line 10)
MAIAR_ID_API_DEVNET = 
# environment
LESS = -R
# automatic
%D = $(patsubst %/,%,$(dir $%))
# default
MAKE_COMMAND := /Library/Developer/CommandLineTools/usr/bin/make
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/n8/cttdcj690n1f4b1nznxc8jj40000gn/T/
# automatic
*F = $(notdir $*)
# makefile (from `.env', line 11)
UNIQUE_CONTRACT_ADDRESS = erd1qqqqqqqqqqqqqpgqettaulcsh6afs9h4mhsv44lu28p0rezehdeqk7nttw
# environment
VSCODE_IPC_HOOK = /Users/Rares/Library/Application Support/Code/1.68.1-main.sock
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.29369592.29369799
# environment
HOMEBREW_PREFIX = /opt/homebrew
# automatic
+D = $(patsubst %/,%,$(dir $+))
# makefile (from `.env', line 16)
DOCKER_NGINX_PORT = 80
# automatic
+F = $(notdir $+)
# environment
HOMEBREW_REPOSITORY = /opt/homebrew
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x0
# environment
COMMAND_MODE = unix2003
# default
MAKEFILES := 
# environment
ZNT_CONFIG_DIR = /Users/Rares/.config/znt
# automatic
<F = $(notdir $<)
# environment
EDITOR = vim
# environment
PAGER = less
# environment
LC_ALL = C
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# makefile (from `.env', line 1)
COMPOSE_PROJECT_NAME = multisig
# makefile (from `.env', line 2)
COMPOSE_DOCKER_CLI_BUILD = 1
# environment
MAKELEVEL := 0
# makefile (from `.env', line 12)
UNIQUE_CONTRACT_NAME = Graffino
# environment
LANG = C
# environment
TERM = xterm-256color
# environment
VSCODE_PID = 67162
# makefile (from `.env', line 17)
DOCKER_NGINX_EXPOSED_PORT = 8082
# variable set hash-table stats:
# Load=96/1024=9%, Rehash=0, Collisions=7/121=6%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777234, inode 23382553): 30 files, no impossibilities.

# 30 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

stop:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 13):
	docker compose -f docker-compose.yml down
	

setup:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 17):
	make permissions
	docker network create proxy || true
	docker compose up --build -d
	

rebuild-nginx:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 122):
	docker compose up -d --no-deps --force-recreate --build nginx
	

# Not a target:
all:
#  Command-line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

.PHONY: start stop setup setup-single-wallet setup-multi-wallet setup-dev dev staging production permissions reset clean clean-force ssh-nginx rebuild-nginx
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

setup-dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 60):
	docker-compose -f docker-compose.dev.yml up -d
	

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-07-04 11:52:40
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
 
make: *** No rule to make target `all'.  Stop.

# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

start:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 9):
	docker compose up -d
	

# Not a target:
.env:
#  Implicit rule search has been done.
#  Last modified 2022-05-09 14:49:54
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

staging:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 71):
	make production
	

ssh-nginx:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 118):
	docker exec -it ${COMPOSE_PROJECT_NAME}-nginx /bin/sh
	

dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 64):
	$(CONTAINER_DEV) 'npm start'
	

permissions:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 89):
	mkdir -p .docker/logs/nginx/
	chmod -R 777 .docker/logs/
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

reset:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 95):
	make stop
	docker system prune --force
	rm -rf ./.docker/logs/nginx/*
	rm -rf ./node_modules/
	rm -rf ./.cache/
	rm -rf ./dist/
	make setup
	

clean:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 105):
	make stop
	docker system prune --all --volumes --force
	rm -rf ./.docker/logs/nginx/*
	rm -rf ./node_modules/
	rm -rf ./.cache/
	rm -rf ./dist/
	

setup-single-wallet:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 23):
	make setup-dev
	rm .npmrc && touch .npmrc
	echo $(NPMRC) >> .npmrc
	rm ./src/multisigExtrasConfig.ts ; touch ./src/multisigExtrasConfig.ts
	echo "export const storageApi = '$(EXTRAS_API_DEVNET)';" >> ./src/multisigExtrasConfig.ts
	echo "export const maiarIdApi = '$(MAIAR_ID_API_DEVNET)';" >> ./src/multisigExtrasConfig.ts
	cp -p ./src/config.devnet.ts ./src/config.ts
	rm ./src/multisigConfig.ts ; touch ./src/multisigConfig.ts
	echo "export const uniqueContractAddress = '$(UNIQUE_CONTRACT_ADDRESS)';" >> ./src/multisigConfig.ts
	echo "export const uniqueContractName = '$(UNIQUE_CONTRACT_NAME)';" >> ./src/multisigConfig.ts
	$(CONTAINER_DEV) 'npx prettier --write ./src/multisigConfig.ts'
	$(CONTAINER_DEV) 'npm install'
	$(CONTAINER_DEV) 'npm install @elrondnetwork/dapp-core-internal'
	

production:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 75):
	make permissions
	docker compose up -d
	$(CONTAINER_NGINX) 'npm install'
	$(CONTAINER_NGINX) 'npm rebuild node-sass --force'
	$(CONTAINER_NGINX) './node_modules/prettier/bin-prettier.js -w src/multisigConfig.ts'
	$(CONTAINER_NGINX) 'mkdir -p node_modules/.cache'
	$(CONTAINER_NGINX) 'chmod -R 777 node_modules/.cache'
	$(CONTAINER_NGINX) 'touch node_modules/.cache/.eslintcache'
	$(CONTAINER_NGINX) 'chmod -R 777 node_modules/.cache/.eslintcache'
	$(CONTAINER_NGINX) 'npm run build'
	

clean-force:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 114):
	sudo make clean
	

setup-multi-wallet:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  commands to execute (from `Makefile', line 43):
	make setup-dev
	rm .npmrc && touch .npmrc
	echo $(NPMRC) >> .npmrc
	rm ./src/multisigExtrasConfig.ts ; touch ./src/multisigExtrasConfig.ts
	echo "export const storageApi = '$(EXTRAS_API_DEVNET)';" >> ./src/multisigExtrasConfig.ts
	echo "export const maiarIdApi = '$(MAIAR_ID_API_DEVNET)';" >> ./src/multisigExtrasConfig.ts
	cp -p ./src/config.devnet.ts ./src/config.ts
	rm ./src/multisigConfig.ts ; touch ./src/multisigConfig.ts
	$(CONTAINER_DEV) 'npm install'
	$(CONTAINER_DEV) 'npm install @elrondnetwork/dapp-core-internal'
	

# files hash-table stats:
# Load=21/1024=2%, Rehash=0, Collisions=0/63=0%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 2
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4082 / max = 4082 / min = 4082 / avg = 4082

# Finished Make data base on Mon Jul  4 14:24:52 2022

 
